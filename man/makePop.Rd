% Generated by roxygen2 (4.0.1): do not edit by hand
\name{makePop}
\alias{makePop}
\title{Make a new population}
\usage{
makePop(model = "SI", nColonies = 5, colonyDistr = "equal", space = 100,
  maxDistance = 200, kernel = "unweighted", events = 1000,
  colonySpatialDistr = "uniform", nPathogens = 3, meanColonySize = 10000,
  birth = 0.001, death = 0.001, dispersal = 0.001, transmission = 0.01,
  recovery = 0.005, crossImmunity = 0.1)
}
\arguments{
\item{model}{Define the model type with a string e.g. 'SI', 'SIS'.}

\item{nColonies}{How many colonies/subpopulations do you want.}

\item{colonyDistr}{The model for colony size distirbution. Currently one of 'equal', 'exponential', 'poisson'.}

\item{space}{How large should the space be. A positive number giving the length along a side.}

\item{maxDistace}{The maximum distance within which two colonies can be connected in the network.}

\item{kernel}{How should the network be weighted with respect to distance between colonies. 'inverse', 'linear', 'unweighted'}

\item{events}{Integer defining the number of events to run before stopping the simulation. A single event is an infection, death, birth, migration etc.}

\item{colonySpatialDistr}{How are the colonies distributed in space. 'uniform', 'circle'}

\item{nPathogens}{Integer defining the number of pathogen species or strains.}

\item{meanColonySize}{Colony size.}

\item{birth}{Positive numeric. Birth rate per individual per unit time.}

\item{death}{Positive numeric. Death rate per individual per unit time.}

\item{dispersal}{Positive numeric. Dispersal rate per individual per unit time.}

\item{transmission}{Positive numeric. Transmission rate per unit time.}

\item{recovery}{Positive numeric. Recovery rate per individual per unit time. Disease duration is therefore 1/recovery}

\item{crossImmunity}{Numeric between 0 and 1 that governs cross immunity. 0 is full cross immunity, 1 is no cross immunity.}
}
\value{
A large list that contains the model parameters (numeric in 'parameters' and strings in 'models'.
  The actual time course of the population is in 'I', nColonies x nPathogens x events array.
  The spatial locations of colonies are in 'locations' and 'adjacency' is the weighted (if applicable)
  adjacency matric for the population network. 'waiting' is the interevent times. diseaseClasses, diseaseList
  and whichClasses are mostly references for the relationships between multidisease states.
}
\description{
Make a new population at time 0. The resultant population object will then contain all the information needed
  to update the population.
}
\examples{
p <- buildPop()
p
}

